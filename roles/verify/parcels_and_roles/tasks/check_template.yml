# Copyright 2023 Cloudera, Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---

- name: Host template being checked
  debug:
    msg: "{{ host_template.name }}"
    verbosity: 3

- block:
    - set_fact:
        invalid_services: >-
          {{
          host_template.mappings
          | list
          | difference(role_mappings | list)
          }}
    - name: Ensure the host template services are valid
      assert:
        that: "{{ invalid_services | length == 0 }}"
        success_msg: >-
          All services defined in host template
          '{{ host_template.name }}' are valid
        fail_msg: >-
          Unknown service(s) {{ invalid_services }} defined
          in host template '{{ host_template.name }}'

- block:
    - set_fact:
        invalid_services: >-
          {{
          host_template.mappings
          | list
          | difference(cluster.services | list)
          }}
    - name: Ensure the host template services are also defined in cluster
      assert:
        that: "{{ invalid_services | length == 0 }}"
        success_msg: >-
          All services defined in host template
          '{{ host_template.name }}' are valid
        fail_msg: >-
          Service(s) {{ invalid_services }} defined in host template
          '{{ host_template.name }}' are missing from the cluster.

- name: Ensure the host template service roles are valid
  include_tasks: check_template_roles.yml
  loop: >-
    {{
    host_template.mappings
    | dict2items(key_name='service', value_name='roles')
    }}
  loop_control:
    loop_var: template
