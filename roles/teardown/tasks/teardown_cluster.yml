# Copyright 2021 Cloudera, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---

- name: Generate merged configs (base, compute)
  include_role:
    name: cloudera.cluster.config.cluster.base
  when: cluster.type | default('base') in ['base', 'compute']

- name: Generate merged configs (kts)
  include_role:
    name: cloudera.cluster.config.cluster.kts
  when: cluster.type | default('base') == 'kts'

- name: Remove cluster service directories (base, compute)
  include_tasks: teardown_service_directories.yml
  loop: "{{ base_cluster_directories|dict2items(key_name='name', value_name='roles') }}"
  loop_control:
    loop_var: service
  when:
    - cluster.type | default('base') in ['base', 'compute']
    - service.name in merged_configs
    - host_template is defined
    - host_template in cluster.host_templates
    - service.name in cluster.host_templates[host_template]

- name: Remove cluster service directories (kts)
  include_tasks: teardown_service_directories.yml
  loop: "{{ kts_cluster_directories|dict2items(key_name='name', value_name='roles') }}"
  loop_control:
    loop_var: service
  vars:
    bypass_role_check: true
  when:
    - cluster.type | default('base') == 'kts'

# refactor and merge into the above task once the KTS locations are properly configured in the overlays
# https://docs.cloudera.com/cloudera-manager/7.2.0/reference/topics/cm_props_cdh710_keytrusteeserver.html
- block:
    - name: Remove the KTS configuration directory
      file:
        path: "{{ keytrustee_server_conf_dir }}"
        state: absent
    - name: Remove the KTS database directory
      file:
        path: "{{ keytrustee_server_db_dir }}"
        state: absent
  when: cluster.type | default('base') == 'kts'

- name: Delete service database
  include_tasks: teardown_database.yml
  loop: "{{ databases | default({}) | dict2items }}"
  loop_control:
    loop_var: database
  run_once: true
  when:
   - cluster.services is defined
   - database.key in cluster.services
