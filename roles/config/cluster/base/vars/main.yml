# Copyright 2021 Cloudera, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---

custom_config_templates:
# Explicit defaults
  - template: configs/defaults.j2
# Custom configurations for databases
  - template: configs/databases.j2
  - template: configs/databases-7.1.0.j2
    condition: "{{ cloudera_runtime_version is version('7.1.0','>=') }}"
# Custom configurations for Infra Solr
  - template: configs/infra-solr.j2
    condition: "{{ 'INFRA_SOLR' in cluster.services }}"
# Custom configurations for logging
  - template: configs/logdirs.j2
  - template: configs/logdirs-6.x.j2
    condition: "{{ cloudera_runtime_version is version('6.0.0','>=') and cloudera_runtime_version is version('7.0.0','<') }}"
  - template: configs/logdirs-7.1.0.j2
    condition: "{{ cloudera_runtime_version is version('7.1.0','>=') }}"
# Custom configurations for out-of-memory behaviour, heap dumps etc
  - template: configs/oom.j2
    condition: "{{ cluster.oom is defined }}"
  - template: configs/oom-6.3.0.j2
    condition: "{{ cluster.oom is defined and cloudera_runtime_version is version('6.0.0','>=') }}"
  - template: configs/oom-7.1.0.j2
    condition: "{{ cluster.oom is defined and cloudera_runtime_version is version('7.1.0','>=') }}"
# Custom configurations for Kerberos
  - template: configs/kerberos-5.x.j2
    condition: "{{ cluster.security.kerberos | default(False) and (cloudera_manager_version is version('6.0.0','<') or cluster.type | default('base') == 'compute') }}"
  - template: configs/kerberos-6.x-7.x.j2
    condition: "{{ cluster.security.kerberos | default(False) and cloudera_manager_version is version('6.0.0','>=') }}"
  - template: configs/trusted-realms.j2
    condition: "{{ cluster.security.kerberos | default(False) and auth_providers | default({}) | dict2items | json_query('[?value.type == `KERBEROS`]') | length > 0 }}"
# Custom configurations for TLS
  - template: configs/tls.j2
    condition: "{{ cluster.security.tls | default(False) }}"
  - template: configs/tls-6.x.j2
    condition: "{{ cluster.security.tls | default(False) and cloudera_runtime_version is version('6.0.0','>=') }}"
  - template: configs/tls-7.1.0.j2
    condition: "{{ cluster.security.tls | default(False) and cloudera_runtime_version is version('7.1.0','>=') }}"
  - template: configs/tls-7.1.4.j2
    condition: "{{ cluster.security.tls | default(False) and cloudera_runtime_version is version('7.1.4','>=') }}"
# Custom configurations for Cloudera Streams Processing components on CDH 6.x
  - template: configs/schemaregistry.j2
    condition: >-
      {{ cloudera_runtime_version is version('7.0.0','<')
      and 'SCHEMAREGISTRY' in cluster.services }}
  - template: configs/smm.j2
    condition: >-
      {{ cloudera_runtime_version is version('7.0.0','<')
      and 'STREAMS_MESSAGING_MANAGER' in cluster.services }}
# Custom configurations for Phoenix
  - template: configs/phoenix.j2
    condition: "{{ 'PHOENIX' in cluster.services }}"
# Custom configurations for Ranger
  - template: configs/ranger.j2
    condition: "{{ 'RANGER' in cluster.services }}"
# Custom configurations for Sentry
  - template: configs/sentry.j2
    condition: "{{ 'SENTRY' in cluster.services }}"
# Custom configurations for WorkloadXM
  - template: configs/wxm.j2
    condition: "{{ 'WXM' in cluster.services }}"
# Custom configuration for /var/lib directory
  - template: configs/varlib-7.1.0.j2
    condition: "{{ cluster.varlib_base is defined and cloudera_runtime_version is version('7.1.3','>=') }}"
# LDAP configuration
  - template: configs/ldap.j2
    condition: >-
      {{ service_auth_provider is defined
         and service_auth_provider in auth_providers | default({})
         and auth_providers[service_auth_provider].type | default('LDAP') == "LDAP"
       }}
# Workarounds for bugs / known issues
  - template: workarounds/OPSAPS-56076.j2
    # TODO update fix version
    condition: >-
      {{ ('NIFI' in cluster.services or 'NIFIREGISTRY' in cluster.services)
      and 'RANGER' in cluster.services
      and cloudera_runtime_version is version('7.1.0','>=') }}
  - template: workarounds/OPSAPS-55800.j2
    condition: >-
      {{ not ((cloudera_runtime_version is version('7.2.1', '>=') and cloudera_manager_version is version('7.2.1', '>='))
      or (cloudera_runtime_version is version('7.1.6', '>=') and cloudera_manager_version is version('7.3.0', '>='))) }}
