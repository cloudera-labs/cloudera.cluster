# Copyright 2023 Cloudera, Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: Setup System python3 on Rhel8
  when: ansible_distribution_major_version | int >= 8
  block:
    - name: Check if Python3 is installed so we don't end up with multiple versions
      shell: python3 --version
      register: __py3_check
      changed_when: false
      ignore_errors: true

    - name: install python3 if not already present
      when: __py3_check.rc != 0
      ansible.builtin.package:
        lock_timeout: 180
        name: python3
        update_cache: yes
        state: present

    - name: Ensure pip3 is upgraded
      ansible.builtin.command: "pip3 install --upgrade pip"

# leaving as separate group for when py2 is finally deprecated
- name: Setup System python2 on Rhel8
  when:
    - needs_python2
  block:
    - name: Check if Python2 is installed so we don't end up with multiple versions
      shell: python2 --version
      register: __py2_check
      changed_when: false
      ignore_errors: true

    - name: install python2 if not already present
      when: __py2_check.rc != 0
      ansible.builtin.package:
        lock_timeout: 180
        name: python2
        update_cache: yes
        state: present

    - name: Ensure Python symlink available for Cloudera Manager and Ranger
      ansible.builtin.raw: |
        if [ -f /usr/bin/python2 ] && [ ! -f /usr/bin/python ]; then
          alternatives --set python /usr/bin/python2
        fi

- name: Disable SELinux
  selinux:
    policy: targeted
    state: "{{ selinux_state }}"
  ignore_errors: yes

- name: Disable Transparent Huge Pages until reboot
  shell: echo never > /sys/kernel/mm/transparent_hugepage/{{ item }}
  with_items:
    - enabled
    - defrag

- name: Disable Transparent Huge Pages permanently
  lineinfile:
    backup: yes
    path: /etc/rc.d/rc.local
    line: echo never > /sys/kernel/mm/transparent_hugepage/{{ item }}
    mode: 0755
  with_items:
    - enabled
    - defrag

- name: Disable Transparent Huge Pages in GRUB config
  lineinfile:
    backup: yes
    state: present
    path: /etc/default/grub
    backrefs: yes
    regexp: '^(GRUB_CMDLINE_LINUX=(?!.*hugepage)\"[^\"]+)(\".*)'
    line: '\1 transparent_hugepage=never\2'
  ignore_errors: yes

- name: Rebuild GRUB
  shell: grub2-mkconfig -o /boot/grub2/grub.cfg
  ignore_errors: yes
