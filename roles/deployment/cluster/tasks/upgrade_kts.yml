# Copyright 2021 Cloudera, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---

- name: Generate complete kts cluster configs
  include_role:
    name: config/cluster/kts

- name: Backup Active KTS
  cloudera.cluster.cm_api:
    endpoint: "/clusters/{{cluster.name | urlencode() }}/services/keytrustee_server/commands/BackupAndSetupCronJob-Active"
    method: POST

- name: Backup Passive KTS
  cloudera.cluster.cm_api:
    endpoint: "/clusters/{{cluster.name | urlencode() }}/services/keytrustee_server/commands/BackupAndSetupCronJob-Passive"
    method: POST

- name: Get CM config
  cloudera.cluster.cm_api:
    endpoint: "cm/config"
    method: GET
  register: cm_config

- set_fact:
    parcel_repos: "{{ (cm_config.json | json_query('items[?name==`REMOTE_PARCEL_REPO_URLS`].value') | default(['']))[0].split(',') | default([]) | union(cluster.repositories) }}"

- name: Update parcelrepos
  cloudera.cluster.cm_api:
    endpoint: "cm/config"
    body:
      items:
        - name: REMOTE_PARCEL_REPO_URLS
          value: "{{ parcel_repos | join(', ') }}"
    method: PUT

- name: Refresh parcel repos command
  cloudera.cluster.cm_api:
    endpoint: "/cm/commands/refreshParcelRepos"
    method: POST

- set_fact:
    parcel_version: "{{ products | json_query('[?product==`KEYTRUSTEE_SERVER`].version') | first }}"

- name: Get parcel versions
  cloudera.cluster.cm_api:
    endpoint: "/clusters/{{cluster.name | urlencode() }}/parcels/"
    method: GET
  register: installed_parcels

- set_fact:
    installed_parcel_version: "{{ installed_parcels.json | json_query('items[?product==`KEYTRUSTEE_SERVER` && stage==`ACTIVATED`]') | cloudera.cluster.get_product_version('KEYTRUSTEE_SERVER') }}"

- name: Download and upgrade KTS Parcel
  block:
    - name: Start Parcel Download
      cloudera.cluster.cm_api:
        endpoint: "/clusters/{{cluster.name | urlencode() }}/parcels/products/KEYTRUSTEE_SERVER/versions/{{ parcel_version }}/commands/startDownload"
        method: POST

    - name: Wait for parcels to download
      cloudera.cluster.cm_api:
        endpoint: "/clusters/{{cluster.name | urlencode() }}/parcels/products/KEYTRUSTEE_SERVER/versions/{{ parcel_version }}"
      register: parcels_response
      until: parcels_response.json.stage in ("DOWNLOADED", "DISTRIBUTED")
      retries: "{{ parcel_poll_max_retries | default(30) }}"
      delay: "{{ parcel_poll_duration | default(60) }}"

    - name: Start Parcel Distribution
      cloudera.cluster.cm_api:
        endpoint: "/clusters/{{cluster.name | urlencode() }}/parcels/products/KEYTRUSTEE_SERVER/versions/{{ parcel_version }}/commands/startDistribution"
        method: POST

    - name: Wait for parcels to become distributed to all hosts
      cloudera.cluster.cm_api:
        endpoint: /clusters/{{cluster.name | urlencode() }}/parcels/products/KEYTRUSTEE_SERVER/versions/{{ parcel_version }}
      register: parcels_response
      until: parcels_response.json.stage == "DISTRIBUTED"
      retries: "{{ parcel_poll_max_retries | default(30) }}"
      delay: "{{ parcel_poll_duration | default(60) }}"

    - name: Start Parcel Activation
      cloudera.cluster.cm_api:
        endpoint: "/clusters/{{cluster.name | urlencode() }}/parcels/products/KEYTRUSTEE_SERVER/versions/{{ parcel_version }}/commands/activate"
        method: POST

    - name: Wait for parcels to become activated on all hosts
      cloudera.cluster.cm_api:
        endpoint: /clusters/{{cluster.name | urlencode() }}/parcels/products/KEYTRUSTEE_SERVER/versions/{{ parcel_version }}
      register: parcels_response
      until: parcels_response.json.stage == "ACTIVATED"
      retries: "{{ parcel_poll_max_retries | default(30) }}"
      delay: "{{ parcel_poll_duration | default(60) }}"

    - name: Restart KTS cluster
      cloudera.cluster.cm_api:
        endpoint: /clusters/{{ cluster.name | urlencode() }}/commands/restart
        method: POST

  when: (parcel_version | regex_search('([0-9]+[.]?)+')) is version(installed_parcel_version, '>')